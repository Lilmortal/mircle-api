plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id 'checkstyle'
    id "com.diffplug.gradle.spotless" version '3.4.0'
    id "net.saliman.cobertura" version '2.5.0'
    id 'org.springframework.boot' version '1.5.6.RELEASE'
}

repositories {
    jcenter()
}

ext {
    postgresqlDriverVersion = '42.1.1'
    swaggerVersion = '2.7.0'
    jacksonVersion = '2.8.8'
    h2DatabaseVersion = '1.4.195'
    gsonVersion = '2.8.1'
    googleJavaFormatVersion = '1.3'
    awsVersion = '1.11.177'
    oauthVersion = '2.2.0.RELEASE'
    jwtVersion = '0.7.0'

    junitVersion = '4.12'
    wiremockVersion = '2.1.12'
    restAssuredVersion = '3.0.3'

    checkstyleFile = 'config/checkstyle/checkstyle.xml'
    checkstyleReportFile = 'build/reports/checkstyle/'

    checkstyleVersion = '7.8.2'
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-web"
    //compile "org.springframework.boot:spring-boot-starter-jdbc"
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-security"
    compile "org.springframework.security.oauth:spring-security-oauth2:${oauthVersion}"
    compile "org.springframework.security:spring-security-jwt:${jwtVersion}"
    compile "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    compile "io.springfox:springfox-swagger2:${swaggerVersion}"
    compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonVersion}"
    compile "org.postgresql:postgresql:${postgresqlDriverVersion}"
    compile "com.google.code.gson:gson:${gsonVersion}"
    compile "com.h2database:h2:${h2DatabaseVersion}"
    compile "com.amazonaws:aws-java-sdk-s3:${awsVersion}"
    compile "com.amazonaws:aws-java-sdk-lambda:${awsVersion}"
    compile "io.jsonwebtoken:jjwt:${jwtVersion}"


    testCompile "com.h2database:h2:${h2DatabaseVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.github.tomakehurst:wiremock:${wiremockVersion}"
    testCompile "io.rest-assured:rest-assured:${restAssuredVersion}"

    checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
}

springBoot {
    mainClass = "nz.co.mircle.MircleApplication"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.0'
}

bootRun {
    systemProperties System.properties
}

// Checkstyle related tasks
checkstyle {
    configFile = [project.ext.checkstyleFile] as File
    reportsDir = [project.ext.checkstyleReportFile] as File
    toolVersion = '6.5'
    maxErrors = 0
}

// This is needed to ignore generated files.
checkstyleMain.source = 'src/main/java'
checkstyleTest.source = 'src/test/java'

// Spotless related tasks
spotless {
    java {
        googleJavaFormat()
        paddedCell()
    }
}

// Cobertura related tasks
cobertura {
    coverageFormats = ['html', 'xml']
}